upstream Next {
	server 192.168.1.104:3000;
}

upstream BFF {
	server 192.168.1.104:8902;
}

server {

    listen		443 ssl http2;
	listen		[::]:443 ssl http2;

    server_name localhost;

    ssl_certificate /etc/ssl/localhost.cer;
    ssl_certificate_key /etc/ssl/localhost.pem;

	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 10m;
	keepalive_timeout 70;

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;
	ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

	ssl_stapling on;
	ssl_trusted_certificate /etc/ssl/rootca.cer;
	resolver 8.8.8.8;

# 	location /bff {
# 		# Reverse proxy for BFF server
# 		proxy_pass http://BFF;
# 		proxy_http_version 1.1;
# 		proxy_set_header Upgrade $http_upgrade;
# 		proxy_set_header Connection "upgrade";
# 		proxy_set_header Host $host/;
# 		proxy_set_header X-Real-IP $remote_addr;
# 		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 		proxy_set_header X-Forwarded-Proto $scheme;
# 		proxy_set_header X-Forwarded-Host $host;
# 		proxy_set_header X-Forwarded-Port $server_port;
#
# 		proxy_set_header Cookie $http_cookie;
# 		proxy_set_header Set-Cookie $sent_http_set_cookie;
#
# 		# we need to remove this 404 handling
# 		# because of Next's error handling and _next folder
# 		# try_files $uri $uri/ =404;
# 	}


	location / {
    	# Reverse proxy for Next server
    	proxy_pass http://Next;
    	proxy_http_version 1.1;
    	proxy_set_header Upgrade $http_upgrade;
    	proxy_set_header Connection "upgrade";
    	proxy_set_header Host $host;
    	proxy_set_header X-Real-IP $remote_addr;
    	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    	proxy_set_header X-Forwarded-Proto $scheme;
    	proxy_set_header X-Forwarded-Host $host;
    	proxy_set_header X-Forwarded-Port $server_port;

    	# we need to remove this 404 handling
    	# because of Next's error handling and _next folder
    	# try_files $uri $uri/ =404;	
	}
}

# HTTP redirect
server {
    listen      80;
    listen      [::]:80;
    server_name localhost;

    return 301 https://$host$request_uri;
}